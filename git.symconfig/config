[user]
  name = Devin Lehmacher
  email = lehmacdj@gmail.com

[push]
  default = simple

[core]
  # convert CRLF to LF on commit but don't convert when checking out
  # (this is best practice for unix to avoid accidentally committing CRLF)
  autocrlf = input

[alias]
  # Aliases: see also the scripts in "$DOTFILES/git.symconfig/bin"
  status = status -sb
  unstage = reset -q HEAD --
  last = log -1 HEAD
  discard = checkout --
  reset-skipped = !git update-index --no-skip-worktree "$@" && git checkout -- "$@"
  precommit = diff --cached --diff-algorithm=minimal -w
  conflicts = diff --name-only --diff-filter=U
  # force reset + fetch/reset (most often used as `git fr origin/master`)
  fr = !git fetch && git reset --hard "$@"
  # push force (safer and shorter than `push --force`)
  pf = push --force-with-lease
  # copy the current branch name
  copy-branch = !git rev-parse --abbrev-ref HEAD | ghead -c -1 | pbcopy
  # list TODOs in files changed by this PR
  todos = !git diff --name-only origin/master | xargs grep -n "TODO"
  # rebase --continue without editing the commit message
  rc = -c core.editor=: rebase --continue
  # push and pull
  pp = "!git pull --rebase && git push"
  # Shorter versions of standard git commands
  s = status -sb
  l = log --oneline -n 16 --graph
  a = add
  f = commit --fixup
  co = checkout
  ci = commit
  rlm = fetch-reset-latest-trunk

[sendemail]
  smtpuser = lehmacdj@gmail.com
  smtpserver = smtp.googlemail.com
  smtpencryption = tls
  smtpserverport = 587
  suppresscc = self

[pull]
  rebase = true
[log]
  follow = true

[merge]
  tool = nvimdiff
[mergetool]
  prompt = true
[mergetool "nvimdiff"]
  cmd = nvim -d $LOCAL $BASE $REMOTE $MERGED -c '$wincmd w' -c '$wincmd J'
[diff]
  tool = nvimdiff
  colorMoved = true
  colorMovedWS = allow-indentation-change
[difftool]
  prompt = true
[difftool "nvimdiff"]
  cmd = nvim -d $LOCAL $REMOTE $MERGED -c '$wincmd w' -c '$wincmd J'
[init]
  defaultBranch = main
  templateDir = ~/.config/git/template
[rebase]
  autosquash = true
  # don't flatten merges (i.e. makes --rebase-merges the default for git rebase)
  rebaseMerges = true
  # automatically update branches based on the current branch
  updateRefs = true
[fetch]
  prune = true
[advice]
  detachedHead = false
[rerere]
  enabled = true
