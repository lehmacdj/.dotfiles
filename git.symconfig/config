[user]
  name = Devin Lehmacher
  email = lehmacdj@gmail.com

[push]
  default = simple

[core]
  autocrlf = false

[alias]
  # Aliases
  status = status -sb
  unstage = reset -q HEAD --
  last = log -1 HEAD
  discard = checkout --
  reset-skipped = !git update-index --no-skip-worktree "$@" && git checkout -- "$@"
  precommit = diff --cached --diff-algorithm=minimal -w
  amend = "!do_amend(){ \
  if [ \"$1\" == '' ]; then \
    git commit --amend --no-edit; \
  else \
    git commit --amend \"$@\"; \
  fi;\
}; do_amend"
  # checkout fuzzy
  cf = !git for-each-ref --sort=committerdate --format=$'%(refname:short)\t%(committerdate:relative)' refs/heads | awk -F'\t' '{ printf \"%-50s %s\\n\", $1, $2 }' | fzf --tac --no-sort | cut -f 1 -d' ' | xargs -n1 git checkout
  # branch cleanup
  bc = !git for-each-ref --sort=-committerdate --format=$'%(refname:short)\t%(committerdate:relative)' refs/heads | grep -v '^saved/' | awk -F'\t' '{ printf \"%-50s %s\\n\", $1, $2 }' | fzf --tac --no-sort | cut -f 1 -d' ' | xargs -n1 git branch -D
  conflicts = diff --name-only --diff-filter=U
  added-lines = !git add -N . && git diff --numstat | cut -f 1 -d '	' | awk 'BEGIN { sum = 0 } { sum = sum + $0 } END { print sum }'
  # push force (safer and shorter than `push --force`)
  pf = push --force-with-lease
  # copy the current branch name
  copy-branch = !git rev-parse --abbrev-ref HEAD | ghead -c -1 | pbcopy
  bump-ci = "!do_bump_ci(){ \
  if [ -z "$(git status --porcelain)" ]; then \
    git commit --allow-empty -m \"force CI to retrigger\" && git push; \
  else \
    echo \"There are uncommitted changes\"; \
  fi;\
}; do_bump_ci"
  # list TODOs in files changed by this PR
  todos = !git diff --name-only origin/master | xargs grep -n "TODO"


  # Shorter versions of standard git commands
  s = status -sb
  a = add
  co = checkout
  ci = commit

[sendemail]
  smtpuser = lehmacdj@gmail.com
  smtpserver = smtp.googlemail.com
  smtpencryption = tls
  smtpserverport = 587
  suppresscc = self

[pull]
  rebase = true
[log]
  follow = true

[merge]
  tool = nvimdiff
[mergetool]
  prompt = true
[mergetool "nvimdiff"]
  cmd = nvim -d $LOCAL $BASE $REMOTE $MERGED -c '$wincmd w' -c '$wincmd J'
[diff]
  tool = nvimdiff
  colorMoved = true
  colorMovedWS = allow-indentation-change
[difftool]
  prompt = true
[difftool "nvimdiff"]
  cmd = nvim -d $LOCAL $REMOTE $MERGED -c '$wincmd w' -c '$wincmd J'
[init]
  defaultBranch = main
  templateDir = ~/.config/git/template
[rebase]
  autosquash = true
  # don't flatten merges (i.e. makes --rebase-merges the default for git rebase)
  rebaseMerges = true
  # automatically update branches based on the current branch
  updateRefs = true
[fetch]
  prune = true
[advice]
  detachedHead = false
