#!/usr/bin/env bash
set -eu -o pipefail

if [ -z "$DOTFILES" ] && [ -d "$DOTFILES" ]; then
  >&2 echo "error: DOTFILES must be defined and a valid directory to invoke $0"
  exit 1
fi

template_file="$DOTFILES/starship/template.starship.toml"
if ! [ -f "$template_file" ]; then
  >&2 echo "error: $template_file must exist to invoke $0"
  exit 1
fi

lock="$(dir "$HOME"/.cache/dotfiles)/build-starship.sh.lock"
# shellcheck disable=2064
trap "rmdir '$lock'" EXIT
if ! mkdir "$lock" >/dev/null 2>&1; then
  >&2 echo "warning: already running build-starship.sh, aborting to avoid race condition"
  exit 0
fi

function make_header() {
  [ $# -eq 1 ] || { >&2 echo "error: requires 1 argument"; return 1; }
  file=$1
  cat >"$file" << EOF
# WARNING: autogenerated file; DO NOT EDIT
# Edit $DOTFILES/starship/starship.template.toml instead.
EOF
}

start_marker="#IF SUPPORTS(RIGHT_PROMPT)"
else_marker="#ELSE - OTHER SHELLS"
end_marker="#END IF"

right_prompt_file="$DOTFILES/starship/right_prompt.starship.toml"
default_file="$DOTFILES/starship/starship.toml"

make_header "$right_prompt_file"
sed >>"$right_prompt_file" \
  -e "1,/^$start_marker$/d;/^$else_marker$/,/^$end_marker$/d" \
  "$template_file"

make_header "$default_file"
sed >>"$default_file" \
  -e "1,/^$else_marker$/d;/^$end_marker$/d" \
 "$template_file"
